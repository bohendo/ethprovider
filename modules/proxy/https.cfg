global
  chroot /root
  log stdout local0
  maxconn 2048
  ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL
  ssl-default-bind-options no-sslv3
  tune.ssl.default-dh-param 2048

defaults
  log global
  mode http
  option dontlognull
  option http-server-close
  option httpclose
  option httplog
  option redispatch
  timeout client  300000  # 5 minutes
  timeout connect 3000    # 3 seconds
  timeout server  300000  # 5 minutes

frontend public_http
  bind *:80
  default_backend letsencrypt_backend
  http-request add-header X-Forwarded-Proto: http
  option forwardfor
  redirect scheme https if !{ ssl_fc }

frontend public_https
  acl eth1_path path_beg /geth
  acl eth1_ws_path path_beg /ws/geth
  acl letsencrypt_acl path_beg /.well-known/acme-challenge/
  bind *:443 ssl crt "/root/$ETHPROVIDER_DOMAINNAME.pem"
  http-response del-header Access-Control-Allow-Headers
  http-response del-header Access-Control-Allow-Methods
  http-response del-header Access-Control-Allow-Origin
  http-response add-header Access-Control-Allow-Headers "*"
  http-response add-header Access-Control-Allow-Methods "*"
  http-response add-header Access-Control-Allow-Origin "*"
  option forwardfor
  use_backend eth1 if eth1_path
  use_backend eth1_ws if eth1_ws_path
  use_backend letsencrypt_backend if letsencrypt_acl

backend letsencrypt_backend
  server letsencrypt "127.0.0.1:$ETHPROVIDER_CERTBOT_PORT"

backend eth1
  http-request replace-path /geth /
  server eth1 "$ETHPROVIDER_GETH_HTTP"

backend eth1_ws
  http-request replace-path /ws/geth /
  server eth1 "$ETHPROVIDER_GETH_WS"
